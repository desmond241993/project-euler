'''
Problem 2: Even Fibonacci numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
'''

def fibonacci_sum(n):
    even_sum = 2 if n>1 else 0    #set the sum of even terms as 2 if no of terms is at least 2 else 0 
    prev_term = 1
    curr_term = 2 
    next_term = 0
    while(next_term <= n):
        next_term = prev_term + curr_term
        
        #if the next term is even then add it to the sum 
        if next_term%2 == 0:
            even_sum += next_term
            
        prev_term = curr_term          #the previous term becomes the current term
        curr_term = next_term          #the current term becomes the next term
        
    return even_sum
    
print("The sum of all even-valued terms below four million in the Fibonacci sequence is "+
       str(fibonacci_sum(4000000)))
